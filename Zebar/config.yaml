# Yaml is white-space sensitive (use 2 spaces to indent).

###
# Settings to apply to all windows.
#
# Docs regarding global: https://some-future-docs-link.com
global:
  # Whether to enable the browser devtools.
  enable_devtools: true

###
# Define a new window with an id of 'bar'. This window can then be opened
# via the Zebar cli by running 'zebar open bar'.
#
# Docs regarding window: https://some-future-docs-link.com
window/bar:
  providers:
  - type: 'self'
  - type: 'date'


  # Width of the window in physical pixels.
  width: '{{ self.args.MONITOR_WIDTH }}'
  # Height of the window in physical pixels.
  height: '40'
  # X-position of the window in physical pixels.
  position_x: '{{ self.args.MONITOR_X }}'
  # Y-position of the window in physical pixels.
  position_y: '{{ self.args.MONITOR_Y }}'
  # Whether to show the window above/below all others.
  # Allowed values: 'always_on_top', 'always_on_bottom', 'normal'.
  z_order: 'normal'
  # Whether the window should be shown in the taskbar.
  show_in_taskbar: false
  # Whether the window should have resize handles.
  resizable: false
  # Styles to apply globally within the window. For example, we can use
  # this to import the Nerdfonts icon font. Ref https://www.nerdfonts.com/cheat-sheet
  # for a cheatsheet of available Nerdfonts icons.
  global_styles: |
    @import "https://www.nerdfonts.com/assets/css/webfont.css";
  # CSS/SCSS styles to apply to the root element within the window.
  styles: |
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    align-items: center;
    justify-content: space-between;
    height: 100%;
    color: #ffffffe6;
    font-family: CaskaydiaCove Nerd Font, ui-monospace, monospace;
    font-size: 13px;
    padding: 0;
    border-bottom: 1px solid #ffffff08;
    .group {
      padding-top: 3px;
    }

  group/left:
    styles: |
      display: flex;
      align-items: center;
      flex-direction: row;
      justify-content: left;
      height: content;
      width: content;
      margin: 0 5px 5px 0;
      .template {
        margin-left: 8px;
        padding: 5px 10px 5px 10px;
        border-radius: 6px;
        margin-bottom: 0px;
        background: rgba(26, 34, 42, 0.70);
      }
      i {
        margin-right: 7px;
      }
    template/logo:
      styles: |
        padding: 5px, 10px, 5px, 10px;
        color: #3A86FF;
      template: |
        

    template/weather:
      providers:
      - type: 'weather'
        latitude: 50.02994
        longitude: 21.98734
      styles: |
        color: #DCE775;
      template: |
        @switch (weather.status) {
          @case ('clear_day') {<i class="nf nf-weather-day_sunny"></i>}
          @case ('clear_night') {<i class="nf nf-weather-night_clear"></i>}
          @case ('cloudy_day') {<i class="nf nf-weather-day_cloudy"></i>}
          @case ('cloudy_night') {<i class="nf nf-weather-night_alt_cloudy"></i>}
          @case ('light_rain_day') {<i class="nf nf-weather-day_sprinkle"></i>}
          @case ('light_rain_night') {<i class="nf nf-weather-night_alt_sprinkle"></i>}
          @case ('heavy_rain_day') {<i class="nf nf-weather-day_rain"></i>}
          @case ('heavy_rain_night') {<i class="nf nf-weather-night_alt_rain"></i>}
          @case ('snow_day') {<i class="nf nf-weather-day_snow"></i>}
          @case ('snow_night') {<i class="nf nf-weather-night_alt_snow"></i>}
          @case ('thunder_day') {<i class="nf nf-weather-day_lightning"></i>}
          @case ('thunder_night') {<i class="nf nf-weather-night_alt_lightning"></i>}
        }
        {{ Math.round(weather.celsiusTemp) }}°

  group/center:
    styles: |
      justify-self: center;
    template/glazewm:
      styles: |
        display: flex;
        align-items: center;

        .workspace {
          background: rgba(255, 255, 255, 0.05);
          margin-right: 4px;
          width: 20px;
          height: 20px;
          color: #ffffffe6;
          border: none;
          border-radius: 2px;
        }
      providers: ['glazewm']
      template: |
        @for (workspace of glazewm.workspacesOnMonitor) {
          <button class="workspace">{{ workspace.name }}</button>
        }

  group/right: #        color: #7481b2e1;
    styles: |
      display: flex;
      align-items: center;
      flex-direction: row;
      justify-content: center;
      justify-self: end;
      height: content;
      width: content;
      margin: 0 5px 5px 0;

      .template {
        margin-left: 8px;
        padding: 5px 10px 5px 10px;
        border-radius: 6px;
        margin-bottom: 0px;
        background: rgba(26, 34, 42, 0.70);
      }
      .medium-usage {
        color: #D1DF4A;
      }
      .high-usage {
        color: #FB8C00;
      }
      .extreme-usage {
        color: #900029;
      }
      i {
        margin-right: 7px;
      }

    template/cpu:
      providers:
      - type: 'cpu'
        refresh_interval: 2000
      styles: |
        color: #00CC6A;
        
      template: |
        <i class="nf nf-md-cpu_64_bit"></i>

        <!-- Change the text color if the CPU usage is high. -->
        @if (cpu.usage > 40) {
          <span class="medium-usage">{{ Math.round(cpu.usage) }}%</span>
        } @else if (cpu.usage > 65) {
          <span class="high-usage">{{ Math.round(cpu.usage) }}%</span>
        } @else if (cpu.usage > 95) {
          <span class="extreme-usage">{{ Math.round(cpu.usage) }}%</span>
        } @else {
          <span>{{ Math.round(cpu.usage) }}%</span>
        }

    template/memory:
      providers:
      - type: 'memory'
        refresh_interval: 3000
      styles: |
        color: #00CC6A;
      template: |
        <i class="nf nf-fae-chip"></i>
        @if (memory.usage > 50) {
          <span class="medium-usage">{{ Math.round(memory.usage) }}%</span>
        } @else if (memory.usage > 65) {
          <span class="high-usage">{{ Math.round(memory.usage) }}%</span>
        } @else if (memory.usage > 90) {
          <span class="extreme-usage">{{ Math.round(memory.usage) }}%</span>
        } @else {{{ Math.round(memory.usage) }}%}

    template/battery:
      providers:
      - type: 'battery'
        refresh_interval: 10000
      styles: |
        position: relative;

        .charging-icon {
          position: absolute;
          font-size: 11px;
          left: 7px;
          top: 2px;
        }
      template: |
        <!-- Show icon for whether battery is charging. -->
        @if (battery.isCharging) {<i class="nf nf-md-power_plug charging-icon"></i>}

        <!-- Show icon for how much of the battery is charged. -->
        @if (battery.chargePercent > 90) {<i class="nf nf-fa-battery_4"></i>}
        @else if (battery.chargePercent > 70) {<i class="nf nf-fa-battery_3"></i>}
        @else if (battery.chargePercent > 40) {<i class="nf nf-fa-battery_2"></i>}
        @else if (battery.chargePercent > 20) {<i class="nf nf-fa-battery_1"></i>}
        @else {<i class="nf nf-fa-battery_0"></i>}

        {{ Math.round(battery.chargePercent) }}%

    template/clock:
      # Available date tokens: https://moment.github.io/luxon/#/formatting?id=table-of-tokens
      styles: |
        color: #29B6F6;
      template: |
        {{ date.toFormat(date.now, ' H:mm') }}

    template/date:
      styles: |
        color: #ead89a;
      template: |
        {{ date.toFormat(date.now, '󰃭 EEE d MMM') }}

