// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run `zed: open default settings` from the
// command palette (cmd-shift-p / ctrl-shift-p)
{
  "features": {
    "inline_completion_provider": "supermaven"
  },
  "assistant": {
    "default_model": {
      "provider": "google",
      "model": "gemini-2.0-flash-exp"
    },
    "version": "2"
  },
  "vim_mode": true,
  "ui_font_size": 13,
  "buffer_font_size": 13,
  "theme": {
    "mode": "system",
    "light": "One Light",
    "dark": "Ayu Dark"
  },
  "language_models": {
    "google": {
      "available_models": [
        {
          "name": "gemini-2.0-flash-exp",
          "display_name": "Gemini 2.0 Flash (Experimental)",
          "max_tokens": 128000
        },
        {
          "name": "gemini-2.0-flash-thinking-exp-1219",
          "display_name": "Gemini 2.0 Flash Thinking Experimental",
          "max_tokens": 32000
        },
        {
          "name": "gemini-1.5-flash-latest",
          "display_name": "Gemini 1.5 Flash (Latest)",
          "max_tokens": 1000000
        }
      ]
    }
  },
  "terminal": {
    "alternate_scroll": "off",
    "blinking": "terminal_controlled",
    "copy_on_select": false,
    "dock": "bottom",
    "detect_venv": {
      "on": {
        "directories": [".env", "env", ".venv", "venv"],
        "activate_script": "default"
      }
    },
    "env": {},
    "font_family": "CaskaydiaCove Nerd Font",
    "font_features": null,
    "font_size": null,
    "line_height": "comfortable",
    "option_as_meta": false,
    "button": false,
    "shell": {
      "program": "pwsh"
    },
    "toolbar": {
      "breadcrumbs": true
    },
    "working_directory": "current_project_directory"
  },
  "languages": {
    "Rust": {
      "inlay_hints": {
        "enabled": true,
        "show_type_hints": true,
        "show_parameter_hints": true,
        "show_other_hints": true,
        "edit_debounce_ms": 700,
        "scroll_debounce_ms": 50
      }
    },
    "CSharp": {
      "tab_size": 2,
      "format_on_save": "off"
    },
    "Python": {
      "formatter": {
        "external": {
          "command": "black",
          "arguments": ["-"]
        }
      },
      "format_on_save": "on"
    },
    "LaTeX": {
      "tab_size": 2,
      "preferred_line_length": 150,
      "format_on_save": "off"
    }
  },
  "language_overrides": {
    "Rust": {
      "inlay_hints": {
        "enabled": true
      }
    }
  },
  "lsp": {
    "omnisharp": {
      "binary": {
        "path": "C:/CodeTools/omnisharp/OmniSharp.exe",
        "arguments": ["-lsp"]
      }
    },
    "rust-analyzer": {
      "initialization_options": {
        "inlayHints": {
          "maxLength": null,
          "lifetimeElisionHints": {
            "enable": "skip_trivial",
            "useParameterNames": true
          },
          "closureReturnTypeHints": {
            "enable": "always"
          }
        },
        "completion": {
          "snippets": {
            "custom": {
              "Arc::new": {
                "postfix": "arc",
                "body": ["Arc::new(${receiver})"],
                "requires": "std::sync::Arc",
                "scope": "expr"
              },
              "Some": {
                "postfix": "some",
                "body": ["Some(${receiver})"],
                "scope": "expr"
              },
              "Ok": {
                "postfix": "ok",
                "body": ["Ok(${receiver})"],
                "scope": "expr"
              },
              "Rc::new": {
                "postfix": "rc",
                "body": ["Rc::new(${receiver})"],
                "requires": "std::rc::Rc",
                "scope": "expr"
              },
              "Box::pin": {
                "postfix": "boxpin",
                "body": ["Box::pin(${receiver})"],
                "requires": "std::boxed::Box",
                "scope": "expr"
              },
              "vec!": {
                "postfix": "vec",
                "body": ["vec![${receiver}]"],
                "description": "vec![]",
                "scope": "expr"
              }
            }
          }
        }
      }
    }
  },
  "vim": {
    "use_system_clipboard": "always"
  }
}
